
def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def isNewArchitectureEnabled() {
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

buildscript {
    if (project == rootProject) {
        repositories {
            google()
            mavenCentral()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:8.1.4'
        }
    }
}

if (isNewArchitectureEnabled()) {
    apply plugin: "com.facebook.react"
}

apply plugin: 'com.android.library'

def includeAvifDecoder() {
    return safeExtGet('includeAvifDecoder', false)
}

android {
    namespace "com.dylanvann.fastimage"

    compileSdkVersion safeExtGet('compileSdkVersion', 35)
    buildToolsVersion safeExtGet('buildToolsVersion', '35.0.0')

    defaultConfig {
        minSdkVersion    safeExtGet('minSdkVersion', 21)
        targetSdkVersion safeExtGet('targetSdkVersion', 35)

        versionCode 1
        versionName "1.0"

        buildConfigField("boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString())
    }

    sourceSets {
        main {
            java {
                if (isNewArchitectureEnabled()) {
                    srcDirs += ["src/newarch"]
                } else {
                    srcDirs += ["src/oldarch"]
                }
                if (safeExtGet('excludeAppGlideModule', false)) {
                    exclude "**/FastImageGlideModule.java"
                }
            }
        }
    }

    lint {
        abortOnError false
    }

}

repositories {
    mavenLocal()
    maven { url "$rootDir/../node_modules/react-native/android" }
    maven { url "$rootDir/../node_modules/jsc-android/dist" }
    google()
    mavenCentral()
}

def glideVersion = safeExtGet('glideVersion', '4.16.0')

dependencies {
    implementation 'com.facebook.react:react-native:+'  // node_modules'tan

    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glideVersion}"

    if (includeAvifDecoder()) {
        implementation "com.github.bumptech.glide:avif-integration:${glideVersion}"
    }

    annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"
}
